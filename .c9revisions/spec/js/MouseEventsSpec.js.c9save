{"ts":1377953744064,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"describe('Mouse events feature', function() {\n  'use strict';\n\n  var $input1,\n    $input2,\n    $input3,\n    $input4,\n    $timepicker1,\n    $timepicker2,\n    $timepicker3,\n    $timepicker4,\n    tp1,\n    tp2,\n    tp3,\n    tp4;\n\n  beforeEach(function () {\n    loadFixtures('timepicker.html');\n\n    $input1 = $('#timepicker1');\n    $timepicker1 = $input1.timepicker();\n    tp1 = $timepicker1.data('timepicker');\n\n    $input2 = $('#timepicker2');\n    $timepicker2 = $input2.timepicker({\n      template: 'modal',\n      showSeconds: true,\n      minuteStep: 30,\n      secondStep: 30,\n      defaultTime: false\n    });\n    tp2 = $timepicker2.data('timepicker');\n\n    $input3 = $('#timepicker3');\n    $timepicker3 = $input3.timepicker({\n      defaultTime: '23:15:20',\n      showMeridian: false,\n      showSeconds: true\n    });\n    tp3 = $timepicker3.data('timepicker');\n\n    $input4 = $('#timepicker4');\n    $timepicker4 = $input4.timepicker({\n\t\t\tminuteStep: 5,\n\t\t\tshowInputs: false,\n\t\t\tshowMeridian: true,\n\t\t\ttemplate: 'modal',\n\t\t\tdisableFocus: true\n    });\n    tp4 = $timepicker4.data('timepicker');\n  });\n\n  afterEach(function () {\n    $input1.data('timepicker').remove();\n    $input2.data('timepicker').remove();\n    $input3.data('timepicker').remove();\n    $input4.data('timepicker').remove();\n    $input1.remove();\n    $input2.remove();\n    $input3.remove();\n    $input4.remove();\n  });\n\n  it('should be shown and trigger show events on input click', function() {\n    var showEvents = 0;\n\n    $input1.on('show.timepicker', function() {\n      showEvents++;\n    });\n\n    $input1.parents('div').find('.add-on').trigger('click');\n\n    expect(tp1.isOpen).toBe(true);\n    expect(showEvents).toBe(1);\n  });\n\n  it('should be hidden and trigger hide events on click outside of widget', function() {\n    var hideEvents = 0,\n        time;\n    $input1.val('11:30 AM');\n\n    $input1.on('hide.timepicker', function(e) {\n      hideEvents++;\n\n      time = e.time.value;\n    });\n\n    $input1.parents('div').find('.add-on').trigger('click');\n    expect(tp1.isOpen).toBe(true);\n\n    tp1.$widget.find('.bootstrap-timepicker-hour').trigger('mousedown');\n    $('body').trigger('mousedown');\n\n    expect(tp1.isOpen).toBe(false, 'widget is still open');\n    expect(hideEvents).toBe(1, 'hide event was not thrown once');\n    expect(time).toBe('11:30 AM');\n\n  });\n\n  it('should increment hour on button click', function() {\n    tp1.setTime('11:30 AM');\n    tp1.update();\n\n    tp1.$widget.find('a[data-action=\"incrementHour\"]').trigger('click');\n\n    expect(tp1.getTime()).toBe('12:30 PM');\n\n    tp2.$widget.find('a[data-action=\"incrementHour\"]').trigger('click');\n    expect(tp2.getTime()).toBe('01:00:00 AM');\n  });\n\n  it('should decrement hour on button click', function() {\n    tp1.setTime('12:30 PM');\n    tp1.update();\n\n    tp1.$widget.find('a[data-action=\"decrementHour\"]').trigger('click');\n\n    expect(tp1.getTime()).toBe('11:30 AM', 'meridian isnt toggling');\n\n    tp2.$widget.find('a[data-action=\"incrementHour\"]').trigger('click');\n    tp2.$widget.find('a[data-action=\"incrementHour\"]').trigger('click');\n    tp2.$widget.find('a[data-action=\"decrementHour\"]').trigger('click');\n    expect(tp2.getTime()).toBe('01:00:00 AM');\n  });\n\n  it('should increment minute on button click', function() {\n    tp1.setTime('11:30 AM');\n    tp1.update();\n\t\ttp4.setTime('11:30 AM');\n\t\ttp4.update();\n\n    tp1.$widget.find('a[data-action=\"incrementMinute\"]').trigger('click');\n    expect(tp1.getTime()).toBe('11:45 AM');\n\n    tp2.$widget.find('a[data-action=\"incrementMinute\"]').trigger('click');\n    expect(tp2.getTime()).toBe('00:30:00 AM');\n\n\t\t$input4.trigger('click');\n    tp4.$widget.find('a[data-action=\"incrementMinute\"]').trigger('click');\n    tp4.$widget.find('a[data-action=\"decrementHour\"]').trigger('click');\n\t\t$input4.closest('modal').find('.btn-primary').trigger('click');\n    expect(tp4.getTime()).toBe('10:35 AM');\n\t\texpect($input4.val()).toBe('10:35 AM');\n  });\n\n  it('should decrement minute on button click', function() {\n    tp1.setTime('12:30 PM');\n    tp1.update();\n    tp4.setTime('11:30 AM');\n    tp4.update();\n\n    tp1.$widget.find('a[data-action=\"decrementMinute\"]').trigger('click');\n    expect(tp1.getTime()).toBe('12:15 PM');\n\n    tp4.$widget.find('a[data-action=\"decrementMinute\"]').trigger('click');\n    expect(tp4.getTime()).toBe('11:25 AM');\n  });\n\n  it('should be 11:30:00 PM if minute is decremented on empty input', function() {\n    tp2.$widget.find('a[data-action=\"decrementMinute\"]').trigger('click');\n    expect(tp2.getTime()).toBe('11:30:00 PM');\n  });\n\n  it('should increment second on button click', function() {\n    tp2.setTime('11:30:15 AM');\n    tp2.update();\n\n    tp2.$widget.find('a[data-action=\"incrementSecond\"]').trigger('click');\n\n    expect(tp2.getTime()).toBe('11:30:30 AM');\n  });\n\n  it('should decrement second on button click', function() {\n    tp2.setTime('12:30:15 PM');\n    tp2.update();\n\n  });\n\n  it('should be 11:30:00 PM if minute is decremented on empty input', function() {\n    tp2.$widget.find('a[data-action=\"decrementMinute\"]').trigger('click');\n    expect(tp2.getTime()).toBe('11:30:00 PM');\n  });\n\n  it('should increment second on button click', function() {\n    tp2.setTime('11:30:15 AM');\n    tp2.update();\n\n    tp2.$widget.find('a[data-action=\"incrementSecond\"]').trigger('click');\n\n    expect(tp2.getTime()).toBe('11:30:30 AM');\n  });\n\n  it('should decrement second on button click', function() {\n    tp2.setTime('12:30:15 PM');\n    tp2.update();\n\n    tp2.$widget.find('a[data-action=\"decrementSecond\"]').trigger('click');\n\n    expect(tp2.getTime()).toBe('12:29:45 PM');\n  });\n\n  it('should toggle meridian on button click', function() {\n    tp1.setTime('12:30 PM');\n    tp1.update();\n\n    tp1.$widget.find('a[data-action=\"toggleMeridian\"]').first().trigger('click');\n    expect(tp1.getTime()).toBe('12:30 AM');\n    tp1.$widget.find('a[data-action=\"toggleMeridian\"]').last().trigger('click');\n    expect(tp1.getTime()).toBe('12:30 PM');\n  });\n\n\n  it('should trigger changeTime event if time is changed', function() {\n    var eventCount = 0,\n        time;\n\n    $input1.timepicker().on('changeTime.timepicker', function(e) {\n      eventCount++;\n      time = e.time.value;\n    });\n\n    tp1.setTime('11:30 AM');\n\n    expect(eventCount).toBe(1);\n    expect(time).toBe('11:30 AM');\n\n    tp1.$widget.find('a[data-action=\"incrementHour\"]').trigger('click');\n\n    expect(eventCount).toBe(2);\n    expect(tp1.getTime()).toBe('12:30 PM');\n    expect(time).toBe('12:30 PM');\n\n    tp1.$widget.find('a[data-action=\"incrementMinute\"]').trigger('click');\n\n    expect(eventCount).toBe(3);\n    expect(tp1.getTime()).toBe('12:45 PM');\n  });\n\n  it('should highlight widget inputs on click', function() {\n      //TODO;\n      //tp1.setTime('11:55 AM');\n      //tp1.update();\n\n      //$input1.parents('.bootstrap-timepicker').find('.add-on').trigger('click');\n      //expect(tp1.isOpen).toBe(true);\n      //expect(tp1.$widget.find('.bootstrap-timepicker-hour').val()).toBe('11');\n      //tp1.$widget.find('.bootstrap-timepicker-hour').trigger('click');\n      //var hour1 = window.getSelection().toString();\n////var range = window.getSelection().getRangeAt(0);\n////var hour1 = range.extractContents();\n\n      //expect(hour1).toBe('11', 'hour input not being highlighted');\n\n      //tp1.$widget.find('.bootstrap-timepicker-minute').trigger('click');\n      //var minute1 = window.getSelection().toString();\n      //expect(minute1).toBe('55', 'minute input not being highlighted');\n\n      //tp1.$widget.find('.bootstrap-timepicker-meridian').trigger('click');\n      //var meridian1 = window.getSelection().toString();\n      //expect(meridian1).toBe('AM', 'meridian input not being highlighted');\n  });\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":7713}]],"length":7713}
