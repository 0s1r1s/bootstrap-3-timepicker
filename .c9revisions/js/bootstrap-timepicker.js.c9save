{"ts":1377953720265,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*!\n * Timepicker Component for Twitter Bootstrap\n *\n * Copyright 2013 Joris de Wit\n *\n * Contributors https://github.com/jdewit/bootstrap-timepicker/graphs/contributors\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n(function($, window, document, undefined) {\n  'use strict';\n\n  // TIMEPICKER PUBLIC CLASS DEFINITION\n  var Timepicker = function(element, options) {\n    this.widget = '';\n    this.$element = $(element);\n    this.defaultTime = options.defaultTime;\n    this.disableFocus = options.disableFocus;\n    this.isOpen = options.isOpen;\n    this.minuteStep = options.minuteStep;\n    this.modalBackdrop = options.modalBackdrop;\n    this.secondStep = options.secondStep;\n    this.showInputs = options.showInputs;\n    this.showMeridian = options.showMeridian;\n    this.showSeconds = options.showSeconds;\n    this.template = options.template;\n    this.appendWidgetTo = options.appendWidgetTo;\n\n    this._init();\n  };\n\n  Timepicker.prototype = {\n\n    constructor: Timepicker,\n\n    _init: function() {\n      var self = this;\n\n      if (this.$element.parent().hasClass('input-append') || this.$element.parent().hasClass('input-prepend')) {\n        this.$element.parent('.input-append, .input-prepend').find('.add-on').on({\n          'click.timepicker': $.proxy(this.showWidget, this)\n        });\n        this.$element.on({\n          'focus.timepicker': $.proxy(this.highlightUnit, this),\n          'click.timepicker': $.proxy(this.highlightUnit, this),\n          'keydown.timepicker': $.proxy(this.elementKeydown, this),\n          'blur.timepicker': $.proxy(this.blurElement, this)\n        });\n      } else {\n        if (this.template) {\n          this.$element.on({\n            'focus.timepicker': $.proxy(this.showWidget, this),\n            'click.timepicker': $.proxy(this.showWidget, this),\n            'blur.timepicker': $.proxy(this.blurElement, this)\n          });\n        } else {\n          this.$element.on({\n            'focus.timepicker': $.proxy(this.highlightUnit, this),\n            'click.timepicker': $.proxy(this.highlightUnit, this),\n            'keydown.timepicker': $.proxy(this.elementKeydown, this),\n            'blur.timepicker': $.proxy(this.blurElement, this)\n          });\n        }\n      }\n\n      if (this.template !== false) {\n        this.$widget = $(this.getTemplate()).prependTo(this.$element.parents(this.appendWidgetTo)).on('click', $.proxy(this.widgetClick, this));\n      } else {\n        this.$widget = false;\n      }\n\n      if (this.showInputs && this.$widget !== false) {\n        this.$widget.find('input').each(function() {\n          $(this).on({\n            'click.timepicker': function() { $(this).select(); },\n            'keydown.timepicker': $.proxy(self.widgetKeydown, self)\n          });\n        });\n      }\n\n      this.setDefaultTime(this.defaultTime);\n    },\n\n    blurElement: function() {\n      this.highlightedUnit = undefined;\n      this.updateFromElementVal();\n    },\n\n    decrementHour: function() {\n      if (this.showMeridian) {\n        if (this.hour === 1) {\n          this.hour = 12;\n        } else if (this.hour === 12) {\n          this.hour--;\n\n          return this.toggleMeridian();\n        } else if (this.hour === 0) {\n          this.hour = 11;\n\n          return this.toggleMeridian();\n        } else {\n          this.hour--;\n        }\n      } else {\n        if (this.hour === 0) {\n          this.hour = 23;\n        } else {\n          this.hour--;\n        }\n      }\n      this.update();\n    },\n\n    decrementMinute: function(step) {\n      var newVal;\n\n      if (step) {\n        newVal = this.minute - step;\n      } else {\n        newVal = this.minute - this.minuteStep;\n      }\n\n      if (newVal < 0) {\n        this.decrementHour();\n        this.minute = newVal + 60;\n      } else {\n        this.minute = newVal;\n      }\n      this.update();\n    },\n\n    decrementSecond: function() {\n      var newVal = this.second - this.secondStep;\n\n      if (newVal < 0) {\n        this.decrementMinute(true);\n        this.second = newVal + 60;\n      } else {\n        this.second = newVal;\n      }\n      this.update();\n    },\n\n    elementKeydown: function(e) {\n      switch (e.keyCode) {\n      case 9: //tab\n        this.updateFromElementVal();\n\n        switch (this.highlightedUnit) {\n        case 'hour':\n          e.preventDefault();\n          this.highlightNextUnit();\n          break;\n        case 'minute':\n          if (this.showMeridian || this.showSeconds) {\n            e.preventDefault();\n            this.highlightNextUnit();\n          }\n          break;\n        case 'second':\n          if (this.showMeridian) {\n            e.preventDefault();\n            this.highlightNextUnit();\n          }\n          break;\n        }\n        break;\n      case 27: // escape\n        this.updateFromElementVal();\n        break;\n      case 37: // left arrow\n        e.preventDefault();\n        this.highlightPrevUnit();\n        this.updateFromElementVal();\n        break;\n      case 38: // up arrow\n        e.preventDefault();\n        switch (this.highlightedUnit) {\n        case 'hour':\n          this.incrementHour();\n          this.highlightHour();\n          break;\n        case 'minute':\n          this.incrementMinute();\n          this.highlightMinute();\n          break;\n        case 'second':\n          this.incrementSecond();\n          this.highlightSecond();\n          break;\n        case 'meridian':\n          this.toggleMeridian();\n          this.highlightMeridian();\n          break;\n        }\n        break;\n      case 39: // right arrow\n        e.preventDefault();\n        this.updateFromElementVal();\n        this.highlightNextUnit();\n        break;\n      case 40: // down arrow\n        e.preventDefault();\n        switch (this.highlightedUnit) {\n        case 'hour':\n          this.decrementHour();\n          this.highlightHour();\n          break;\n        case 'minute':\n          this.decrementMinute();\n          this.highlightMinute();\n          break;\n        case 'second':\n          this.decrementSecond();\n          this.highlightSecond();\n          break;\n        case 'meridian':\n          this.toggleMeridian();\n          this.highlightMeridian();\n          break;\n        }\n        break;\n      }\n    },\n\n    formatTime: function(hour, minute, second, meridian) {\n      hour = hour < 10 ? '0' + hour : hour;\n      minute = minute < 10 ? '0' + minute : minute;\n      second = second < 10 ? '0' + second : second;\n\n      return hour + ':' + minute + (this.showSeconds ? ':' + second : '') + (this.showMeridian ? ' ' + meridian : '');\n    },\n\n    getCursorPosition: function() {\n      var input = this.$element.get(0);\n\n      if ('selectionStart' in input) {// Standard-compliant browsers\n\n        return input.selectionStart;\n      } else if (document.selection) {// IE fix\n        input.focus();\n        var sel = document.selection.createRange(),\n          selLen = document.selection.createRange().text.length;\n\n        sel.moveStart('character', - input.value.length);\n\n        return sel.text.length - selLen;\n      }\n    },\n\n    getTemplate: function() {\n      var template,\n        hourTemplate,\n        minuteTemplate,\n        secondTemplate,\n        meridianTemplate,\n        templateContent;\n\n      if (this.showInputs) {\n        hourTemplate = '<input type=\"text\" name=\"hour\" class=\"bootstrap-timepicker-hour\" maxlength=\"2\"/>';\n        minuteTemplate = '<input type=\"text\" name=\"minute\" class=\"bootstrap-timepicker-minute\" maxlength=\"2\"/>';\n        secondTemplate = '<input type=\"text\" name=\"second\" class=\"bootstrap-timepicker-second\" maxlength=\"2\"/>';\n        meridianTemplate = '<input type=\"text\" name=\"meridian\" class=\"bootstrap-timepicker-meridian\" maxlength=\"2\"/>';\n      } else {\n        hourTemplate = '<span class=\"bootstrap-timepicker-hour\"></span>';\n        minuteTemplate = '<span class=\"bootstrap-timepicker-minute\"></span>';\n        secondTemplate = '<span class=\"bootstrap-timepicker-second\"></span>';\n        meridianTemplate = '<span class=\"bootstrap-timepicker-meridian\"></span>';\n      }\n\n      templateContent = '<table>'+\n         '<tr>'+\n           '<td><a href=\"#\" data-action=\"incrementHour\"><i class=\"icon-chevron-up\"></i></a></td>'+\n           '<td class=\"separator\">&nbsp;</td>'+\n           '<td><a href=\"#\" data-action=\"incrementMinute\"><i class=\"icon-chevron-up\"></i></a></td>'+\n           (this.showSeconds ?\n             '<td class=\"separator\">&nbsp;</td>'+\n             '<td><a href=\"#\" data-action=\"incrementSecond\"><i class=\"icon-chevron-up\"></i></a></td>'\n           : '') +\n           (this.showMeridian ?\n             '<td class=\"separator\">&nbsp;</td>'+\n             '<td class=\"meridian-column\"><a href=\"#\" data-action=\"toggleMeridian\"><i class=\"icon-chevron-up\"></i></a></td>'\n           : '') +\n         '</tr>'+\n         '<tr>'+\n           '<td>'+ hourTemplate +'</td> '+\n           '<td class=\"separator\">:</td>'+\n           '<td>'+ minuteTemplate +'</td> '+\n           (this.showSeconds ?\n            '<td class=\"separator\">:</td>'+\n            '<td>'+ secondTemplate +'</td>'\n           : '') +\n           (this.showMeridian ?\n            '<td class=\"separator\">&nbsp;</td>'+\n            '<td>'+ meridianTemplate +'</td>'\n           : '') +\n         '</tr>'+\n         '<tr>'+\n           '<td><a href=\"#\" data-action=\"decrementHour\"><i class=\"icon-chevron-down\"></i></a></td>'+\n           '<td class=\"separator\"></td>'+\n           '<td><a href=\"#\" data-action=\"decrementMinute\"><i class=\"icon-chevron-down\"></i></a></td>'+\n           (this.showSeconds ?\n            '<td class=\"separator\">&nbsp;</td>'+\n            '<td><a href=\"#\" data-action=\"decrementSecond\"><i class=\"icon-chevron-down\"></i></a></td>'\n           : '') +\n           (this.showMeridian ?\n            '<td class=\"separator\">&nbsp;</td>'+\n            '<td><a href=\"#\" data-action=\"toggleMeridian\"><i class=\"icon-chevron-down\"></i></a></td>'\n           : '') +\n         '</tr>'+\n       '</table>';\n\n      switch(this.template) {\n      case 'modal':\n        template = '<div class=\"bootstrap-timepicker-widget modal hide fade in\" data-backdrop=\"'+ (this.modalBackdrop ? 'true' : 'false') +'\">'+\n          '<div class=\"modal-header\">'+\n            '<a href=\"#\" class=\"close\" data-dismiss=\"modal\">×</a>'+\n            '<h3>Pick a Time</h3>'+\n          '</div>'+\n          '<div class=\"modal-content\">'+\n            templateContent +\n          '</div>'+\n          '<div class=\"modal-footer\">'+\n            '<a href=\"#\" class=\"btn btn-primary\" data-dismiss=\"modal\">OK</a>'+\n          '</div>'+\n        '</div>';\n        break;\n      case 'dropdown':\n        template = '<div class=\"bootstrap-timepicker-widget dropdown-menu\">'+ templateContent +'</div>';\n        break;\n      }\n\n      return template;\n    },\n\n    getTime: function() {\n      return this.formatTime(this.hour, this.minute, this.second, this.meridian);\n    },\n\n    hideWidget: function() {\n      if (this.isOpen === false) {\n        return;\n      }\n\n\t\t\tif (this.showInputs) {\n\t\t\t\tthis.updateFromWidgetInputs();\n\t\t\t}\n\n      this.$element.trigger({\n        'type': 'hide.timepicker',\n        'time': {\n          'value': this.getTime(),\n          'hours': this.hour,\n          'minutes': this.minute,\n          'seconds': this.second,\n          'meridian': this.meridian\n        }\n      });\n\n      if (this.template === 'modal' && this.$widget.modal) {\n        this.$widget.modal('hide');\n      } else {\n        this.$widget.removeClass('open');\n      }\n\n      $(document).off('mousedown.timepicker');\n\n      this.isOpen = false;\n    },\n\n    highlightUnit: function() {\n      this.position = this.getCursorPosition();\n      if (this.position >= 0 && this.position <= 2) {\n        this.highlightHour();\n      } else if (this.position >= 3 && this.position <= 5) {\n        this.highlightMinute();\n      } else if (this.position >= 6 && this.position <= 8) {\n        if (this.showSeconds) {\n          this.highlightSecond();\n        } else {\n          this.highlightMeridian();\n        }\n      } else if (this.position >= 9 && this.position <= 11) {\n        this.highlightMeridian();\n      }\n    },\n\n    highlightNextUnit: function() {\n      switch (this.highlightedUnit) {\n      case 'hour':\n        this.highlightMinute();\n        break;\n      case 'minute':\n        if (this.showSeconds) {\n          this.highlightSecond();\n        } else if (this.showMeridian){\n          this.highlightMeridian();\n        } else {\n          this.highlightHour();\n        }\n        break;\n      case 'second':\n        if (this.showMeridian) {\n          this.highlightMeridian();\n        } else {\n          this.highlightHour();\n        }\n        break;\n      case 'meridian':\n        this.highlightHour();\n        break;\n      }\n    },\n\n    highlightPrevUnit: function() {\n      switch (this.highlightedUnit) {\n      case 'hour':\n        this.highlightMeridian();\n        break;\n      case 'minute':\n        this.highlightHour();\n        break;\n      case 'second':\n        this.highlightMinute();\n        break;\n      case 'meridian':\n        if (this.showSeconds) {\n          this.highlightSecond();\n        } else {\n          this.highlightMinute();\n        }\n        break;\n      }\n    },\n\n    highlightHour: function() {\n      var $element = this.$element.get(0);\n\n      this.highlightedUnit = 'hour';\n\n\t\t\tif ($element.setSelectionRange) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$element.setSelectionRange(0,2);\n\t\t\t\t}, 0);\n\t\t\t}\n    },\n\n    highlightMinute: function() {\n      var $element = this.$element.get(0);\n\n      this.highlightedUnit = 'minute';\n\n\t\t\tif ($element.setSelectionRange) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$element.setSelectionRange(3,5);\n\t\t\t\t}, 0);\n\t\t\t}\n    },\n\n    highlightSecond: function() {\n      var $element = this.$element.get(0);\n\n      this.highlightedUnit = 'second';\n\n\t\t\tif ($element.setSelectionRange) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$element.setSelectionRange(6,8);\n\t\t\t\t}, 0);\n\t\t\t}\n    },\n\n    highlightMeridian: function() {\n      var $element = this.$element.get(0);\n\n      this.highlightedUnit = 'meridian';\n\n\t\t\tif ($element.setSelectionRange) {\n\t\t\t\tif (this.showSeconds) {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t$element.setSelectionRange(9,11);\n\t\t\t\t\t}, 0);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t$element.setSelectionRange(6,8);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n    },\n\n    incrementHour: function() {\n      if (this.showMeridian) {\n        if (this.hour === 11) {\n          this.hour++;\n          return this.toggleMeridian();\n        } else if (this.hour === 12) {\n          this.hour = 0;\n        }\n      }\n      if (this.hour === 23) {\n        this.hour = 0;\n\n        return;\n      }\n      this.hour++;\n      this.update();\n    },\n\n    incrementMinute: function(step) {\n      var newVal;\n\n      if (step) {\n        newVal = this.minute + step;\n      } else {\n        newVal = this.minute + this.minuteStep - (this.minute % this.minuteStep);\n      }\n\n      if (newVal > 59) {\n        this.incrementHour();\n        this.minute = newVal - 60;\n      } else {\n        this.minute = newVal;\n      }\n      this.update();\n    },\n\n    incrementSecond: function() {\n      var newVal = this.second + this.secondStep - (this.second % this.secondStep);\n\n      if (newVal > 59) {\n        this.incrementMinute(true);\n        this.second = newVal - 60;\n      } else {\n        this.second = newVal;\n      }\n      this.update();\n    },\n\n    remove: function() {\n      $('document').off('.timepicker');\n      if (this.$widget) {\n        this.$widget.remove();\n      }\n      delete this.$element.data().timepicker;\n    },\n\n    setDefaultTime: function(defaultTime){\n      if (!this.$element.val()) {\n        if (defaultTime === 'current') {\n          var dTime = new Date(),\n            hours = dTime.getHours(),\n            minutes = Math.floor(dTime.getMinutes() / this.minuteStep) * this.minuteStep,\n            seconds = Math.floor(dTime.getSeconds() / this.secondStep) * this.secondStep,\n            meridian = 'AM';\n\n          if (this.showMeridian) {\n            if (hours === 0) {\n              hours = 12;\n            } else if (hours >= 12) {\n              if (hours > 12) {\n                hours = hours - 12;\n              }\n              meridian = 'PM';\n            } else {\n              meridian = 'AM';\n            }\n          }\n\n          this.hour = hours;\n          this.minute = minutes;\n          this.second = seconds;\n          this.meridian = meridian;\n\n          this.update();\n\n        } else if (defaultTime === false) {\n          this.hour = 0;\n          this.minute = 0;\n          this.second = 0;\n          this.meridian = 'AM';\n        } else {\n          this.setTime(defaultTime);\n        }\n      } else {\n        this.updateFromElementVal();\n      }\n    },\n\n    setTime: function(time) {\n      var arr,\n        timeArray;\n\n      if (this.showMeridian) {\n        arr = time.split(' ');\n        timeArray = arr[0].split(':');\n        this.meridian = arr[1];\n      } else {\n        timeArray = time.split(':');\n      }\n\n      this.hour = parseInt(timeArray[0], 10);\n      this.minute = parseInt(timeArray[1], 10);\n      this.second = parseInt(timeArray[2], 10);\n\n      if (isNaN(this.hour)) {\n        this.hour = 0;\n      }\n      if (isNaN(this.minute)) {\n        this.minute = 0;\n      }\n\n      if (this.showMeridian) {\n        if (this.hour > 12) {\n          this.hour = 12;\n        } else if (this.hour < 1) {\n          this.hour = 12;\n        }\n\n        if (this.meridian === 'am' || this.meridian === 'a') {\n          this.meridian = 'AM';\n        } else if (this.meridian === 'pm' || this.meridian === 'p') {\n          this.meridian = 'PM';\n        }\n\n        if (this.meridian !== 'AM' && this.meridian !== 'PM') {\n          this.meridian = 'AM';\n        }\n      } else {\n        if (this.hour >= 24) {\n          this.hour = 23;\n        } else if (this.hour < 0) {\n          this.hour = 0;\n        }\n      }\n\n      if (this.minute < 0) {\n        this.minute = 0;\n      } else if (this.minute >= 60) {\n        this.minute = 59;\n      }\n\n      if (this.showSeconds) {\n        if (isNaN(this.second)) {\n          this.second = 0;\n        } else if (this.second < 0) {\n          this.second = 0;\n        } else if (this.second >= 60) {\n          this.second = 59;\n        }\n      }\n\n      this.update();\n    },\n\n    showWidget: function() {\n      if (this.isOpen) {\n        return;\n      }\n\n      if (this.$element.is(':disabled')) {\n        return;\n      }\n\n      var self = this;\n      $(document).on('mousedown.timepicker', function (e) {\n        // Clicked outside the timepicker, hide it\n        if ($(e.target).closest('.bootstrap-timepicker-widget').length === 0) {\n          self.hideWidget();\n        }\n      });\n\n      this.$element.trigger({\n        'type': 'show.timepicker',\n        'time': {\n          'value': this.getTime(),\n          'hours': this.hour,\n          'minutes': this.minute,\n          'seconds': this.second,\n          'meridian': this.meridian\n        }\n      });\n\n      if (this.disableFocus) {\n        this.$element.blur();\n      }\n\n      this.updateFromElementVal();\n\n      if (this.template === 'modal' && this.$widget.modal) {\n        this.$widget.modal('show').on('hidden', $.proxy(this.hideWidget, this));\n      } else {\n        if (this.isOpen === false) {\n          this.$widget.addClass('open');\n        }\n      }\n\n      this.isOpen = true;\n    },\n\n    toggleMeridian: function() {\n      this.meridian = this.meridian === 'AM' ? 'PM' : 'AM';\n      this.update();\n    },\n\n    update: function() {\n      this.$element.trigger({\n        'type': 'changeTime.timepicker',\n        'time': {\n          'value': this.getTime(),\n          'hours': this.hour,\n          'minutes': this.minute,\n          'seconds': this.second,\n          'meridian': this.meridian\n        }\n      });\n\n      this.updateElement();\n      this.updateWidget();\n    },\n\n    updateElement: function() {\n      this.$element.val(this.getTime()).change();\n    },\n\n    updateFromElementVal: function() {\n\t\t\tvar val = this.$element.val();\n\n\t\t\tif (val) {\n\t\t\t\tthis.setTime(val);\n\t\t\t}\n    },\n\n    updateWidget: function() {\n      if (this.$widget === false) {\n        return;\n      }\n\n      var hour = this.hour < 10 ? '0' + this.hour : this.hour,\n          minute = this.minute < 10 ? '0' + this.minute : this.minute,\n          second = this.second < 10 ? '0' + this.second : this.second;\n\n      if (this.showInputs) {\n        this.$widget.find('input.bootstrap-timepicker-hour').val(hour);\n        this.$widget.find('input.bootstrap-timepicker-minute').val(minute);\n\n        if (this.showSeconds) {\n          this.$widget.find('input.bootstrap-timepicker-second').val(second);\n        }\n        if (this.showMeridian) {\n          this.$widget.find('input.bootstrap-timepicker-meridian').val(this.meridian);\n        }\n      } else {\n        this.$widget.find('span.bootstrap-timepicker-hour').text(hour);\n        this.$widget.find('span.bootstrap-timepicker-minute').text(minute);\n\n        if (this.showSeconds) {\n          this.$widget.find('span.bootstrap-timepicker-second').text(second);\n        }\n        if (this.showMeridian) {\n          this.$widget.find('span.bootstrap-timepicker-meridian').text(this.meridian);\n        }\n      }\n    },\n\n    updateFromWidgetInputs: function() {\n      if (this.$widget === false) {\n        return;\n      }\n      var time = $('input.bootstrap-timepicker-hour', this.$widget).val() + ':' +\n        $('input.bootstrap-timepicker-minute', this.$widget).val() +\n        (this.showSeconds ? ':' + $('input.bootstrap-timepicker-second', this.$widget).val() : '') +\n        (this.showMeridian ? ' ' + $('input.bootstrap-timepicker-meridian', this.$widget).val() : '');\n\n      this.setTime(time);\n    },\n\n    widgetClick: function(e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      var action = $(e.target).closest('a').data('action');\n      if (action) {\n        this[action]();\n      }\n    },\n\n    widgetKeydown: function(e) {\n      var $input = $(e.target).closest('input'),\n          name = $input.attr('name');\n\n      switch (e.keyCode) {\n      case 9: //tab\n        if (this.showMeridian) {\n          if (name === 'meridian') {\n            return this.hideWidget();\n          }\n        } else {\n          if (this.showSeconds) {\n            if (name === 'second') {\n              return this.hideWidget();\n            }\n          } else {\n            if (name === 'minute') {\n              return this.hideWidget();\n            }\n          }\n        }\n\n        this.updateFromWidgetInputs();\n        break;\n      case 27: // escape\n        this.hideWidget();\n        break;\n      case 38: // up arrow\n        e.preventDefault();\n        switch (name) {\n        case 'hour':\n          this.incrementHour();\n          break;\n        case 'minute':\n          this.incrementMinute();\n          break;\n        case 'second':\n          this.incrementSecond();\n          break;\n        case 'meridian':\n          this.toggleMeridian();\n          break;\n        }\n        break;\n      case 40: // down arrow\n        e.preventDefault();\n        switch (name) {\n        case 'hour':\n          this.decrementHour();\n          break;\n        case 'minute':\n          this.decrementMinute();\n          break;\n        case 'second':\n          this.decrementSecond();\n          break;\n        case 'meridian':\n          this.toggleMeridian();\n          break;\n        }\n        break;\n      }\n    }\n  };\n\n\n  //TIMEPICKER PLUGIN DEFINITION\n  $.fn.timepicker = function(option) {\n    var args = Array.apply(null, arguments);\n    args.shift();\n    return this.each(function() {\n      var $this = $(this),\n        data = $this.data('timepicker'),\n        options = typeof option === 'object' && option;\n\n      if (!data) {\n        $this.data('timepicker', (data = new Timepicker(this, $.extend({}, $.fn.timepicker.defaults, options, $(this).data()))));\n      }\n\n      if (typeof option === 'string') {\n        data[option].apply(data, args);\n      }\n    });\n  };\n\n  $.fn.timepicker.defaults = {\n    defaultTime: 'current',\n    disableFocus: false,\n    isOpen: false,\n    minuteStep: 15,\n    modalBackdrop: false,\n    secondStep: 15,\n    showSeconds: false,\n    showInputs: true,\n    showMeridian: true,\n    template: 'dropdown',\n    appendWidgetTo: '.bootstrap-timepicker'\n  };\n\n  $.fn.timepicker.Constructor = Timepicker;\n\n})(jQuery, window, document);\n"]],"start1":0,"start2":0,"length1":0,"length2":24362}]],"length":24362}
{"contributors":[],"silentsave":false,"ts":1377954305939,"patch":[[{"diffs":[[0,"Hour\"><i class=\""],[1,"glyphicon glyph"],[0,"icon-chevron-up\""]],"start1":8178,"start2":8178,"length1":32,"length2":47}]],"length":24377,"saved":false}
{"ts":1377954314247,"patch":[[{"diffs":[[0,"nute\"><i class=\""],[-1,""],[0,""],[1,"glyphicon glyph"],[0,"icon-chevron-up\""]],"start1":8342,"start2":8342,"length1":32,"length2":47},{"diffs":[[0,"cond\"><i class=\""],[1,"glyphicon glyph"],[0,"icon-chevron-up\""]],"start1":8541,"start2":8541,"length1":32,"length2":47},{"diffs":[[0,"dian\"><i class=\""],[1,"glyphicon glyph"],[0,"icon-chevron-up\""]],"start1":8782,"start2":8782,"length1":32,"length2":47}]],"length":24422,"saved":false}
{"ts":1377954348157,"patch":[[{"diffs":[[0,"Hour\"><i class=\""],[1,"glyphicon glyph"],[0,"icon-chevron-dow"]],"start1":9399,"start2":9399,"length1":32,"length2":47},{"diffs":[[0,"nute\"><i class=\""],[1,"glyphicon glyph"],[0,"icon-chevron-dow"]],"start1":9559,"start2":9559,"length1":32,"length2":47},{"diffs":[[0,"cond\"><i class=\""],[1,"glyphicon glyph"],[0,"icon-chevron-dow"]],"start1":9758,"start2":9758,"length1":32,"length2":47},{"diffs":[[0," class=\""],[-1,""],[0,""],[1,"glyphicon glyph"],[0,"icon-che"]],"start1":9983,"start2":9983,"length1":16,"length2":31}]],"length":24482,"saved":false}
{"ts":1377954417104,"patch":[[{"diffs":[[0,"ker-hour"],[1," form-control"],[0,"\" maxlen"]],"start1":7367,"start2":7367,"length1":16,"length2":29},{"diffs":[[0,"r-minute"],[1," form-control"],[0,"\" maxlen"]],"start1":7493,"start2":7493,"length1":16,"length2":29},{"diffs":[[0,"r-second"],[1," form-control"],[0,"\" maxlen"]],"start1":7619,"start2":7619,"length1":16,"length2":29},{"diffs":[[0,"meridian"],[1," form-control"],[0,"\" maxlen"]],"start1":7751,"start2":7751,"length1":16,"length2":29}]],"length":24534,"saved":false}
{"ts":1377954437160,"patch":[[{"diffs":[[0,"rol\" maxlength=\""],[-1,"2"],[1,"3"],[0,"\"/>';\n        mi"]],"start1":7385,"start2":7385,"length1":33,"length2":33}]],"length":24534,"saved":false}
{"ts":1377954441306,"patch":[[{"diffs":[[0,"length=\""],[-1,"3"],[1,"2"],[0,"\"/>';\n  "]],"start1":7393,"start2":7393,"length1":17,"length2":17}]],"length":24534,"saved":false}
